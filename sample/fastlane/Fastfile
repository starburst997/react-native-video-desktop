match_org, match_repo = (ENV["MATCH_REPOSITORY"]||"").split("/")

default_platform(:mac)

platform :mac do
  desc "Sync codesigning certificates"
  lane :sync_certificates do
    if ENV['USE_SESSION'] != 'true'
      app_store_connect_api_key(
        key_id: ENV["APPSTORE_KEY_ID"],
        issuer_id: ENV["APPSTORE_ISSUER_ID"],
        key_content: ENV['APPSTORE_P8'],
        in_house: false
      )
    end

    match(
      type: "developer_id",
      storage_mode: "git",
      git_url: "git@github.com:#{match_org}/#{match_repo}.git",
      app_identifier: ENV["MAC_BUNDLE_ID"]
    )
  end

  desc "Build unsigned app for testing"
  lane :build_unsigned do
    build_mac_app(
      export_method: 'mac-application',
      workspace: "macos/react-native-video-desktop-sample.xcworkspace",
      output_directory: "dist",
      output_name: "react-native-video-desktop-sample",
      scheme: "react-native-video-desktop-sample-macOS"
    )
  end

  desc "Build and sign app with Developer ID"
  lane :build_signed do
    setup_ci

    sync_certificates

    # Unity has specific requirements around codesigning that we have to handle
    # See https://github.com/fastlane/fastlane/discussions/17458 for context
    update_code_signing_settings(
      use_automatic_signing: true,
      path: "macos/react-native-video-desktop-sample.xcodeproj"
    )

    update_code_signing_settings(
      use_automatic_signing: false,
      team_id: ENV["sigh_#{ENV['MAC_BUNDLE_ID']}_developer_id_macos_team-id"],
      code_sign_identity: 'Developer ID Application',
      targets: "react-native-video-desktop-sample-macOS",
      bundle_identifier: ENV["MAC_BUNDLE_ID"],
      path: "macos/react-native-video-desktop-sample.xcodeproj",
      profile_name: ENV["sigh_#{ENV['MAC_BUNDLE_ID']}_developer_id_macos_profile-name"],
      profile_uuid: ENV["sigh_#{ENV['MAC_BUNDLE_ID']}_developer_id_macos"]
    )

    build_mac_app(
      export_method: 'developer-id',
      workspace: "macos/react-native-video-desktop-sample.xcworkspace",
      output_directory: "dist",
      output_name: "react-native-video-desktop-sample",
      scheme: "react-native-video-desktop-sample-macOS",
      xcargs: '-allowProvisioningUpdates',
      export_options: {
        provisioningProfiles: {
          ENV["MAC_BUNDLE_ID"] => ENV["sigh_#{ENV['MAC_BUNDLE_ID']}_developer_id_macos_profile-name"]
        }
      }
    )

    # Notarize the app
    notarize(
      package: "dist/react-native-video-desktop-sample.app",
      bundle_id: ENV["MAC_BUNDLE_ID"],
      username: ENV["APPLE_CONNECT_EMAIL"],
      print_log: true
    )
  end
end
